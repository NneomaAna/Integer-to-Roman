class Solution(object):
    def intToRoman(self, num):
        dic ={1:"I",5:"V",10:"X",50:"L",100:"C",500:"D",1000:"M",
              4:"IV",9:"IX",40:"XL", 90:"XC", 400:"CD", 900:"CM"}
        s1 = ""
        l = [1,4, 5,9, 10,40, 50,90, 100, 400, 500,900, 1000]
        assert (num > 0),"Number should be greater than zero!"
        while num != 0:
            if num > 999:
                s1 += "M"
                num -= 1000 
            else:
                for i in range(len(l)):
                    if l[i] > num:
                       num = num - l[i-1]
                       s1 += dic[l[i-1]]
                       break;
        return s1

            
    """
        :type num: int
        :rtype: str
        
        num = 44
        s = ""
        
        check if num is equal to zero, if not conutine
        
        check lar  = 50
        how will it check lar?
        sees if lar > 44
        if there's a list form smallest to biggest the the first time the value 
        is greater than num then the loop ends
        l = [1,5,10,50,100,500,1000]
        for g in l:
            if g>num:
                lar = g
                break
        
        check sma = 10
        
        if sma is gvien a value, subtracts lar from sma 
        x = 50 -10 // 40
        check if x is in the dic
        if yes
            s += dic[x]
            num -= x
        if no
            s += dic[sma]
            num -= sma
        num = 4
        leaves the loop
        
        check if num is equal to zero, if not conutine
        num = 4
        s = "XL"
        check lar = 5
        check sma = 1
        x = 5-1
        check if x is in dic
        if yes
            s += dic[x]
            num -= x
        if no
            s += dic[sma]
            num -= x
        
        num = 0   
        check if num is equal to zero
        it is so now the loop will end
        
        return s
        
        
        
        
        
        
        
        num = 19
        s = "X"
        subtract 10 from num
        num = 9
        check and see 10(X)-1(I)
        sub 9
        s = "XIX"
        num = 0
        
        
        
        
        s = "XV"
        sub 5 
        num = 2
        s = "XVI"
        sub 1
        num = 1
        s = "XVII"
        sub 1
        num = 0
        
        return s
        
        """
        
